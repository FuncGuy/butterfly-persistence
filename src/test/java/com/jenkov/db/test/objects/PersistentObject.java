/**
 * User: Administrator
 */
package com.jenkov.db.test.objects;

import com.jenkov.db.itf.mapping.IObjectMapping;
import com.jenkov.db.itf.mapping.IObjectMappingFactory;
import com.jenkov.db.itf.PersistenceException;
import com.jenkov.db.test.Environment;
import com.jenkov.db.impl.mapping.ObjectMappingFactory;

import java.sql.ResultSet;
import java.util.Date;

public class PersistentObject {

    private static IObjectMapping persistentObjectMapping = null;

    protected long    id          = 0;
    protected String  name        = null;
    protected Date    autoColumn  = null;
    protected boolean someBoolean = false;

    protected boolean wasResultSetConstructorCalled = false;

    public PersistentObject(){
    }

    public PersistentObject(ResultSet result){
        this.wasResultSetConstructorCalled = true;
    }

    public long getId(){
        return this.id;
    }

    public void setId(long id){
        this.id = id;
    }

    public String getName(){
        return this.name;
    }

    public void setName(String name){
        this.name = name;
    }


    public String getObjectValue(){
        return null;
    }

    public Object getObject(){
        return null;
    }

    public boolean wasResultSetConstructorCalled(){
        return this.wasResultSetConstructorCalled;
    }

    public String toString(){
        return "id = " + getId() + "   name = " + getName() + "   objectValue = " + getObjectValue();
    }

    public Date getAutoColumn() {
        return autoColumn;
    }

    public void setAutoColumn(Date autoColumn) {
        this.autoColumn = autoColumn;
    }

    public boolean isSomeBoolean() {
        return someBoolean;
    }

    public void setSomeBoolean(boolean someBoolean) {
        this.someBoolean = someBoolean;
    }

    public static synchronized IObjectMapping getManualMapping(){
        if(Environment.DATABASE == Environment.MYSQL){
            return getMysqlMapping();
        }

        if(Environment.DATABASE == Environment.HSQLDB_IN_PROCESS){
            return getHsqldbMapping();
        }

        return null;
    }

    private static IObjectMapping getHsqldbMapping (){
        if(persistentObjectMapping != null) return persistentObjectMapping;

        IObjectMappingFactory factory = new ObjectMappingFactory();
        IObjectMapping mapping = factory.createObjectMapping();

        mapping.setObjectClass  (PersistentObject.class);
        mapping.setTableName    ("PERSISTENT_OBJECT");
        mapping.getPrimaryKey().addColumn("ID");

        try {
            factory.addGetterMapping(mapping, "getId"   , "ID"  , true);
            factory.addGetterMapping(mapping, "getName" , "NAME", true);
            factory.addGetterMapping(mapping, "getObjectValue", "OBJECTVALUE", true);
            factory.addGetterMapping(mapping, "getAutoColumn" , "AUTOCOLUMN" , true);


            factory.addSetterMapping(mapping, "setId"   , "ID"  , true);
            factory.addSetterMapping(mapping, "setName" , "NAME", true);
            factory.addSetterMapping(mapping, "setAutoColumn", "AUTOCOLUMN", true);
        } catch (NoSuchMethodException e) {
            e.printStackTrace();
        } catch (PersistenceException e) {
            e.printStackTrace();  //To change body of catch statement use File | Settings | File Templates.
        }

        mapping.getGetterMapping("AUTOCOLUMN").setAutoGenerated(true);

        persistentObjectMapping = mapping;
        return mapping;

    }

    private static IObjectMapping getMysqlMapping (){
        if(persistentObjectMapping != null) return persistentObjectMapping;

        IObjectMappingFactory factory = new ObjectMappingFactory();
        IObjectMapping mapping = factory.createObjectMapping();

        mapping.setObjectClass  (PersistentObject.class);
        mapping.setTableName    ("persistent_object");
        mapping.getPrimaryKey().addColumn("id");

        try {
            factory.addGetterMapping(mapping, "getId"   , "id"  , true);
            factory.addGetterMapping(mapping, "getName" , "name", true);
            factory.addGetterMapping(mapping, "getObjectValue", "objectValue", true);
            factory.addGetterMapping(mapping, "getAutoColumn" , "autoColumn" , true);


            factory.addSetterMapping(mapping, "setId"   , "id"  , true);
            factory.addSetterMapping(mapping, "setName" , "name", true);
            factory.addSetterMapping(mapping, "setAutoColumn", "autoColumn", true);
        } catch (NoSuchMethodException e) {
            e.printStackTrace();
        } catch (PersistenceException e) {
            e.printStackTrace();  //To change body of catch statement use File | Settings | File Templates.
        }

        mapping.getGetterMapping("autoColumn").setAutoGenerated(true);

        persistentObjectMapping = mapping;
        return mapping;

    }

}
