package com.jenkov.db.impl.mapping.method;

import com.jenkov.db.itf.PersistenceException;
import com.jenkov.db.itf.mapping.IGetterMapping;

import java.lang.reflect.InvocationTargetException;
import java.sql.PreparedStatement;
import java.sql.SQLException;


public class GetterMapping extends MethodMapping implements IGetterMapping{

    protected boolean isAutoGenerated = false;

    public boolean isAutoGenerated() {
        return isAutoGenerated;
    }

    public void setAutoGenerated(boolean autoGenerated) {
        isAutoGenerated = autoGenerated;
    }

    public void insertValueFromObject(Object target, PreparedStatement statement, int index) throws PersistenceException{
        try {
            insertObjectDo(getObjectMethod().invoke(target, null), statement, index);
        } catch (SQLException e) {
            throw new PersistenceException("Could not insert value of type  "
                    + getObjectMethod().getReturnType() + "  for field  "
                    + getColumnName() + "  from object into PreparedStatement", e);
        } catch (InvocationTargetException e) {
            throw new PersistenceException("Could not insert value of type  "
                    + getObjectMethod().getReturnType() + "  for field  "
                    + getColumnName() + "  from object into PreparedStatement", e);
        } catch (IllegalAccessException e) {
            throw new PersistenceException("Could not insert value of type  "
                    + getObjectMethod().getReturnType() + "  for field  "
                    + getColumnName() + "  from object into PreparedStatement", e);
        }
    }

    public void insertObject(Object value, PreparedStatement statement, int index) throws PersistenceException {
        try {
            insertObjectDo(value, statement, index);
        } catch (SQLException e) {
            throw new PersistenceException("Error inserting value (" + value + ") at index " + index
                + " in PreparedStatement (" + statement + ")" );
        }
    }


    protected void insertObjectDo(Object value, PreparedStatement statement, int index) throws SQLException{
        //System.out.println("GetterMapping.insertObject");
    }
}
